/****************************************************************************
** Resource object code
**
** Created by: The Resource Compiler for Qt version 6.9.2
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#ifdef _MSC_VER
// disable informational message "function ... selected for automatic inline expansion"
#pragma warning (disable: 4711)
#endif

static const unsigned char qt_resource_data[] = {
  // qmldir
  0x0,0x0,0x0,0xb2,
  0x28,
  0xb5,0x2f,0xfd,0x60,0xb6,0x1,0x45,0x5,0x0,0x72,0x47,0x18,0x18,0x90,0xcd,0x1,
  0x60,0x23,0x5d,0x22,0x5b,0xa6,0x8b,0x9,0x13,0xb2,0x0,0x25,0xdc,0x42,0x14,0xc8,
  0xf7,0x7c,0xfd,0xd2,0x1,0x6b,0x45,0xd,0x3f,0x84,0x42,0x70,0x52,0xdf,0x5f,0xed,
  0xf5,0x3c,0x28,0x5f,0x6f,0xcf,0x5a,0x11,0x35,0xe9,0x16,0xb7,0x9a,0x90,0xf2,0x38,
  0xab,0xbf,0x96,0x68,0xf3,0x63,0x50,0x0,0x6,0x74,0x4e,0x63,0x5,0xff,0x19,0x34,
  0x93,0x2,0x2,0xdd,0x3a,0xeb,0x7e,0x4d,0xcd,0x24,0xc0,0x6d,0x95,0x7d,0x24,0xeb,
  0x1a,0xd8,0x1c,0xe7,0xfd,0x8a,0x5a,0xff,0x89,0xdb,0x4f,0x1b,0xb,0x1e,0xa0,0xb0,
  0x33,0xeb,0x5b,0xeb,0x20,0x2,0x42,0x98,0xb6,0x7,0xc,0x8a,0x21,0x7c,0x28,0xa8,
  0xe4,0xc6,0x38,0x46,0xb5,0x65,0x9b,0x6b,0x4b,0xda,0xf3,0x6c,0x7c,0x59,0xa2,0xc7,
  0x7a,0xf8,0xee,0x9c,0x77,0xde,0x97,0xfb,0xce,0xbf,0x73,0xab,0x18,0x64,0x7f,0xbe,
  0x82,0xcc,0x8b,0x93,0x50,0x40,0x1,0x44,0x81,0x81,0xcf,0xa0,0xc8,0xe4,0xd6,0xe2,
  0x29,
  
};

static const unsigned char qt_resource_name[] = {
  // qml
  0x0,0x3,
  0x0,0x0,0x78,0x3c,
  0x0,0x71,
  0x0,0x6d,0x0,0x6c,
    // app
  0x0,0x3,
  0x0,0x0,0x68,0x70,
  0x0,0x61,
  0x0,0x70,0x0,0x70,
    // qmldir
  0x0,0x6,
  0x7,0x84,0x2b,0x2,
  0x0,0x71,
  0x0,0x6d,0x0,0x6c,0x0,0x64,0x0,0x69,0x0,0x72,
  
};

static const unsigned char qt_resource_struct[] = {
  // :
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/qml
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x2,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/qml/app
  0x0,0x0,0x0,0xc,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x3,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/qml/app/qmldir
  0x0,0x0,0x0,0x18,0x0,0x4,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x1,0x99,0x57,0xd7,0xc,0x6f,

};

#ifdef QT_NAMESPACE
#  define QT_RCC_PREPEND_NAMESPACE(name) ::QT_NAMESPACE::name
#  define QT_RCC_MANGLE_NAMESPACE0(x) x
#  define QT_RCC_MANGLE_NAMESPACE1(a, b) a##_##b
#  define QT_RCC_MANGLE_NAMESPACE2(a, b) QT_RCC_MANGLE_NAMESPACE1(a,b)
#  define QT_RCC_MANGLE_NAMESPACE(name) QT_RCC_MANGLE_NAMESPACE2( \
        QT_RCC_MANGLE_NAMESPACE0(name), QT_RCC_MANGLE_NAMESPACE0(QT_NAMESPACE))
#else
#   define QT_RCC_PREPEND_NAMESPACE(name) name
#   define QT_RCC_MANGLE_NAMESPACE(name) name
#endif

#if defined(QT_INLINE_NAMESPACE)
inline namespace QT_NAMESPACE {
#elif defined(QT_NAMESPACE)
namespace QT_NAMESPACE {
#endif

bool qRegisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);
bool qUnregisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);

#if defined(__ELF__) || defined(__APPLE__)
static inline unsigned char qResourceFeatureZstd()
{
    extern const unsigned char qt_resourceFeatureZstd;
    return qt_resourceFeatureZstd;
}
#else
unsigned char qResourceFeatureZstd();
#endif

#ifdef QT_NAMESPACE
}
#endif

int QT_RCC_MANGLE_NAMESPACE(qInitResources_qmake_app)();
int QT_RCC_MANGLE_NAMESPACE(qInitResources_qmake_app)()
{
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qRegisterResourceData)
        (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qmake_app)();
int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qmake_app)()
{
    int version = 3;
    version += QT_RCC_PREPEND_NAMESPACE(qResourceFeatureZstd());
    QT_RCC_PREPEND_NAMESPACE(qUnregisterResourceData)
       (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

#ifdef __clang__
#   pragma clang diagnostic push
#   pragma clang diagnostic ignored "-Wexit-time-destructors"
#endif

namespace {
   struct initializer {
       initializer() { QT_RCC_MANGLE_NAMESPACE(qInitResources_qmake_app)(); }
       ~initializer() { QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qmake_app)(); }
   } dummy;
}

#ifdef __clang__
#   pragma clang diagnostic pop
#endif
